{
  "swagger": "2.0",
  "host": "localhost:4001",
  "basePath": "/",
  "info": {
    "version": "1.0.0",
    "title": "Simple Parking",
    "description": "Backend da aplicação Simple Parking",
    "license": {
      "name": "Access the repository at this link",
      "url": "https://github.com/MarlonLira/sstec-backend"
    }
  },
  "tags": [
    {
      "name": "user",
      "description": "Operations about user"
    },
    {
      "name": "useraddress",
      "description": "Operations about user address"
    },
    {
      "name": "vehicle",
      "description": "Operations about vehicle"
    },
    {
      "name": "company",
      "description": "Operations about company"
    },
    {
      "name": "companyaddress",
      "description": "Operations about company address"
    },
    {
      "name": "employee",
      "description": "Operations about employee"
    },
    {
      "name": "card",
      "description": "Operations about card"
    },
    {
      "name": "payment",
      "description": "Operations about payment"
    },
    {
      "name": "parking",
      "description": "Operations about parking"
    },
    {
      "name": "parkingaddress",
      "description": "Operations about parking address"
    },
    {
      "name": "parkingspace",
      "description": "Operations about parking space"
    },
    {
      "name": "parkingpromotion",
      "description": "Operations about parking promotion"
    }
  ],
  "paths": {
    "/companyaddress/{id}": {
      "get": {
        "tags": [
          "companyaddress"
        ],
        "produces": [
          "application/json"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of company address to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/companyaddresses": {
      "get": {
        "tags": [
          "companyaddress"
        ],
        "produces": [
          "application/json"
        ],
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/companyaddress": {
      "put": {
        "tags": [
          "companyaddress"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "description": "",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "company address object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CompanyAddress"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "companyaddress"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "description": "",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "company address object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CompanyAddress"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/useraddress/{id}": {
      "get": {
        "tags": [
          "useraddress"
        ],
        "produces": [
          "application/json"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of user address to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/useraddresses": {
      "get": {
        "tags": [
          "useraddress"
        ],
        "produces": [
          "application/json"
        ],
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/useraddress": {
      "put": {
        "tags": [
          "useraddress"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "description": "",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "user address object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserAddress"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "useraddress"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "description": "",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "user address object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserAddress"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/parkingaddress/{id}": {
      "get": {
        "tags": [
          "parkingaddress"
        ],
        "produces": [
          "application/json"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of parking address to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/parkingaddresses": {
      "get": {
        "tags": [
          "parkingaddress"
        ],
        "produces": [
          "application/json"
        ],
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/parkingaddress": {
      "put": {
        "tags": [
          "parkingaddress"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "description": "",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "parking address object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ParkingAddress"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "parkingaddress"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "description": "",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "parking address object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ParkingAddress"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/parkingpromotion/{id}": {
      "get": {
        "tags": [
          "parkingpromotion"
        ],
        "produces": [
          "application/json"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of parking promotion to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/parkingpromotions": {
      "get": {
        "tags": [
          "parkingpromotion"
        ],
        "produces": [
          "application/json"
        ],
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/parkingpromotion": {
      "put": {
        "tags": [
          "parkingpromotion"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "description": "",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "parkin gpromotion object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ParkingPromotion"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "parkingpromotion"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "description": "",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "parking promotion object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ParkingPromotion"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/rule/{id}": {
      "get": {
        "tags": [
          "rule"
        ],
        "produces": [
          "application/json"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of rule to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/rules": {
      "get": {
        "tags": [
          "rule"
        ],
        "produces": [
          "application/json"
        ],
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/rule": {
      "put": {
        "tags": [
          "rule"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "description": "",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "rule object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Rule"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "rule"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "description": "",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "rule object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Rule"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/company/{id}": {
      "get": {
        "tags": [
          "company"
        ],
        "produces": [
          "application/json"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of company to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/companies": {
      "get": {
        "tags": [
          "company"
        ],
        "produces": [
          "application/json"
        ],
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/company": {
      "put": {
        "tags": [
          "company"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "description": "",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "company object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Company"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "company"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "description": "",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "company object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Company"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/parkingspace/{id}": {
      "get": {
        "tags": [
          "parkingspace"
        ],
        "produces": [
          "application/json"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of parkingspace to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/parkingspaces": {
      "get": {
        "tags": [
          "parkingspace"
        ],
        "produces": [
          "application/json"
        ],
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/parkingspace": {
      "put": {
        "tags": [
          "employee"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "description": "",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "parkingspace object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ParkingSpace"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "parkingspace"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "description": "",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "parkingspace object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ParkingSpace"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/employee/{id}": {
      "get": {
        "tags": [
          "employee"
        ],
        "produces": [
          "application/json"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of employee to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/employees": {
      "get": {
        "tags": [
          "employee"
        ],
        "produces": [
          "application/json"
        ],
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/employee": {
      "put": {
        "tags": [
          "employee"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "description": "",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "employee object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Employee"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "employee"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "description": "",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "employee object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Employee"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/card/{id}": {
      "get": {
        "tags": [
          "card"
        ],
        "produces": [
          "application/json"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of card to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/cards": {
      "get": {
        "tags": [
          "card"
        ],
        "produces": [
          "application/json"
        ],
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/card": {
      "put": {
        "tags": [
          "card"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "description": "",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "card object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Card"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "card"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "description": "",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "card object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Card"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/parking/{id}": {
      "get": {
        "tags": [
          "parking"
        ],
        "produces": [
          "application/json"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of parking to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/parkings": {
      "get": {
        "tags": [
          "parking"
        ],
        "produces": [
          "application/json"
        ],
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/parking": {
      "put": {
        "tags": [
          "parking"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "description": "",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "parking object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Parking"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "parking"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "description": "",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "parking object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Parking"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/vehicles/user/{id}": {
      "get": {
        "tags": [
          "vehicle"
        ],
        "produces": [
          "application/json"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of user to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Vehicle"
            }
          },
          "400": {
            "description": "Invalid Id supplied"
          },
          "404": {
            "description": "Vehicle not found"
          }
        }
      }
    },
    "/vehicle/{id}": {
      "get": {
        "tags": [
          "vehicle"
        ],
        "produces": [
          "application/json"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of vehicle to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Vehicle"
            }
          },
          "400": {
            "description": "Invalid Id supplied"
          },
          "404": {
            "description": "Vehicle not found"
          }
        }
      }
    },
    "/vehicle": {
      "put": {
        "tags": [
          "vehicle"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "description": "",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "vehicle object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Vehicles"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          },
          "400": {
            "description": "Vehicle already exists"
          }
        }
      },
      "post": {
        "tags": [
          "vehicle"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "description": "",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "vehicle object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Vehicles"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          },
          "400": {
            "description": "Vehicle already exists"
          }
        }
      }
    },
    "/user": {
      "put": {
        "tags": [
          "user"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "description": "",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          },
          "400": {
            "description": "User already exists"
          }
        }
      },
      "post": {
        "tags": [
          "user"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "description": "",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          },
          "400": {
            "description": "User already exists"
          }
        }
      }
    },
    "/user/{id}": {
      "get": {
        "tags": [
          "user"
        ],
        "produces": [
          "application/json"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of usuario to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Invalid Id supplied"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "user"
        ],
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "definitions": {
    "ApiResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "result": {
          "type": "object"
        }
      }
    },
    "Auth": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        },
        "validated": {
          "type": "boolean",
          "example": false
        },
        "user": {
          "type": "object",
          "format": "#/definitions/Employee",
          "example": "#/definitions/Employee"
        },
        "employee": {
          "type": "object",
          "format": "#/definitions/User",
          "example": "#/definitions/User"
        },
        "company": {
          "type": "object",
          "format": "#/definitions/Company",
          "example": "#/definitions/Company"
        }
      },
      "xml": {
        "name": "User"
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "user": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int64"
            },
            "status": {
              "type": "string",
              "format": "char(2)",
              "example": "AT"
            },
            "name": {
              "type": "string",
              "example": "teste"
            },
            "registryCode": {
              "type": "string",
              "example": "45100993049"
            },
            "phone": {
              "type": "string",
              "example": "81986584778"
            },
            "email": {
              "type": "string",
              "example": "teste@teste.com"
            },
            "password": {
              "type": "string",
              "example": "123456"
            }
          }
        }
      },
      "xml": {
        "name": "User"
      }
    },
    "Vehicle": {
      "type": "object",
      "properties": {
        "vehicle": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int64"
            },
            "status": {
              "type": "string",
              "format": "char(2)",
              "example": "AT"
            },
            "model": {
              "type": "string"
            },
            "color": {
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "licensePlate": {
              "type": "string"
            },
            "userId": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      },
      "xml": {
        "name": "Vehicle"
      }
    },
    "Payment": {
      "type": "object",
      "properties": {
        "payment": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int64"
            },
            "status": {
              "type": "string",
              "format": "char(2)",
              "example": "AT"
            },
            "value": {
              "type": "number",
              "format": "double"
            }
          }
        }
      },
      "xml": {
        "name": "Payment"
      }
    },
    "Card": {
      "type": "object",
      "properties": {
        "card": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int64"
            },
            "status": {
              "type": "string",
              "format": "char(2)",
              "example": "AT"
            },
            "holder": {
              "type": "string"
            },
            "number": {
              "type": "string"
            },
            "secureCode": {
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "userId": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      },
      "xml": {
        "name": "Card"
      }
    },
    "Company": {
      "type": "object",
      "properties": {
        "company": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int64"
            },
            "status": {
              "type": "string",
              "format": "char(2)",
              "example": "AT"
            },
            "name": {
              "type": "string"
            },
            "registryCode": {
              "type": "string"
            },
            "phone": {
              "type": "string"
            },
            "email": {
              "type": "string"
            }
          }
        }
      },
      "xml": {
        "name": "Company"
      }
    },
    "CompanyAddress": {
      "type": "object",
      "properties": {
        "companyAddress": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int64"
            },
            "status": {
              "type": "string",
              "format": "char(2)",
              "example": "AT"
            },
            "country": {
              "type": "string"
            },
            "state": {
              "type": "string"
            },
            "city": {
              "type": "string"
            },
            "street": {
              "type": "string"
            },
            "number": {
              "type": "number"
            },
            "zipCode": {
              "type": "string"
            },
            "complement": {
              "type": "string"
            },
            "companyId": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      },
      "xml": {
        "name": "Company"
      }
    },
    "Rule": {
      "type": "object",
      "properties": {
        "rule": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int64"
            },
            "status": {
              "type": "string",
              "format": "char(2)",
              "example": "AT"
            },
            "name": {
              "type": "string",
              "example": "admin"
            },
            "level": {
              "type": "number",
              "example": 1
            }
          }
        }
      },
      "xml": {
        "name": "Rule"
      }
    },
    "Employee": {
      "type": "object",
      "properties": {
        "employee": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int64"
            },
            "status": {
              "type": "string",
              "format": "char(2)",
              "example": "AT"
            },
            "name": {
              "type": "string"
            },
            "registryCode": {
              "type": "string"
            },
            "password": {
              "type": "string"
            },
            "email": {
              "type": "string",
              "example": "teste@email.com"
            },
            "phone": {
              "type": "string",
              "example": "81985856565"
            },
            "companyId": {
              "type": "integer",
              "format": "int64"
            },
            "ruleId": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      },
      "xml": {
        "name": "Employee"
      }
    },
    "Parking": {
      "type": "object",
      "properties": {
        "parking": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int64"
            },
            "status": {
              "type": "string",
              "format": "char(2)",
              "example": "AT"
            },
            "name": {
              "type": "string"
            },
            "registryCode": {
              "type": "string"
            },
            "phone": {
              "type": "string"
            },
            "email": {
              "type": "string"
            },
            "amount": {
              "type": "string"
            },
            "imgUrl": {
              "type": "string"
            },
            "companyId": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      },
      "xml": {
        "name": "Parking"
      }
    },
    "ParkingSpace": {
      "type": "object",
      "properties": {
        "parkingSpace": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int64"
            },
            "status": {
              "type": "string",
              "format": "char(2)",
              "example": "AT"
            },
            "description": {
              "type": "string"
            },
            "value": {
              "type": "number"
            },
            "parkingId": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      },
      "xml": {
        "name": "ParkingSpace"
      }
    },
    "ParkingPromotion": {
      "type": "object",
      "properties": {
        "parkingPromotion": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int64"
            },
            "status": {
              "type": "string",
              "format": "char(2)",
              "example": "AT"
            },
            "description": {
              "type": "string"
            },
            "days": {
              "type": "number"
            },
            "hours": {
              "type": "number"
            },
            "discount": {
              "type": "number"
            },
            "parkingId": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      },
      "xml": {
        "name": "ParkingPromotion"
      }
    },
    "ParkingAddress": {
      "type": "object",
      "properties": {
        "parkingAddress": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int64"
            },
            "status": {
              "type": "string",
              "format": "char(2)",
              "example": "AT"
            },
            "country": {
              "type": "string"
            },
            "state": {
              "type": "string"
            },
            "city": {
              "type": "string"
            },
            "street": {
              "type": "string"
            },
            "number": {
              "type": "number"
            },
            "zipCode": {
              "type": "string"
            },
            "latitude": {
              "type": "string"
            },
            "longitude": {
              "type": "string"
            },
            "complement": {
              "type": "string"
            },
            "parkingId": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      },
      "xml": {
        "name": "ParkingAddress"
      }
    }
  }
}